var http = require('http');var WebSocket = require('ws');const socket = new WebSocket.Server({ port: 81});var fs = require('fs');var qs  = require('querystring');var WS_START = "pkg={\"FIRMWARE\":\"iSTAR-v20191706\",\"TIME\":34563,\"TEST_MODE\":0,\"LIVE_TIME\":11140,\"PCF8563\":34652,\"RESET_COUNT\":579,\"WIFI_STATE\":3,\"WIFI_SIGNAL\":100,\"MQTT_STATE\":1,\"ADC1\":-273.15,\"ADC2\":-273.15 ,\"ADC3\":-273.15 ,\"RL1_LIVE\":17450 ,\"RL1_LIVE\":25781 ,\"RL1_LIVE\":24828}";var ISTARJON = "{\"PRODUCT\":1,\"SERIAL_NUMBER\":\"1234567989\",\"RS485\":{\"MODE\":2,\"SLAVE_ID\":\"99\",\"DEVICES\":[1,2,2,2,1,1,12,0,121,0,14,2,4,1,45,0,7,1],\"NUM\":0},\"SYSTEM\":{\"TIME\":0,\"TBS\":60,\"TT_MAX\":80,\"TBON_MAX\":80,\"RCAP\":5,\"TANK_VOL\":5,\"RELAY_EN\":3},\"CONV\":{\"TYPE\":1,\"TON\":10,\"TOFF\":5,\"TIMEON\":600,\"TIMEOFF\":600},\"RETURN\":{\"TYPE\":1,\"TON\":10,\"TOFF\":5,\"TIMEON\":600,\"TIMEOFF\":600},\"HEATER\":{\"TON\":10},\"TIMECHEDULE\":{\"NUM\":3,\"SCHEDULE\":[25200,7200,46800,7200,68400,7200,0,0,0,0]}}";var OTHERJSON = "{\"PRODUCT\":2,\"SERIAL_NUMBER\":\"1234567989\",\"RS485\":{\"MODE\":1,\"SLAVE_ID\":\"01\",\"DEVICES\":[1,2,2,2,1,1,12,0,121,0,14,2,4,1,45,0,7,1],\"NUM\":0},\"MANUAL\":true,\"MANUALDATA\":7,\"OTHERSLOT\":[{\"NUM\":5,\"SLOT\":[{\"TYPE\":3,\"TIMESTAR\":0,\"DURATION\":3660,\"TIMEON\":0,\"TIMEOFF\":0},{\"TYPE\":3,\"TIMESTAR\":0,\"DURATION\":0,\"TIMEON\":0,\"TIMEOFF\":0},{\"TYPE\":3,\"TIMESTAR\":0,\"DURATION\":0,\"TIMEON\":0,\"TIMEOFF\":0},{\"TYPE\":3,\"TIMESTAR\":0,\"DURATION\":0,\"TIMEON\":0,\"TIMEOFF\":0},{\"TYPE\":3,\"TIMESTAR\":0,\"DURATION\":0,\"TIMEON\":0,\"TIMEOFF\":0}]},{\"NUM\":5,\"SLOT\":[{\"TYPE\":3,\"TIMESTAR\":0,\"DURATION\":3660,\"TIMEON\":0,\"TIMEOFF\":0},{\"TYPE\":3,\"TIMESTAR\":0,\"DURATION\":3660,\"TIMEON\":0,\"TIMEOFF\":0},{\"TYPE\":3,\"TIMESTAR\":0,\"DURATION\":3660,\"TIMEON\":0,\"TIMEOFF\":0},{\"TYPE\":3,\"TIMESTAR\":0,\"DURATION\":3660,\"TIMEON\":0,\"TIMEOFF\":0},{\"TYPE\":3,\"TIMESTAR\":0,\"DURATION\":4260,\"TIMEON\":0,\"TIMEOFF\":0}]},{\"NUM\":5,\"SLOT\":[{\"TYPE\":3,\"TIMESTAR\":60,\"DURATION\":3600,\"TIMEON\":0,\"TIMEOFF\":0},{\"TYPE\":3,\"TIMESTAR\":0,\"DURATION\":3660,\"TIMEON\":0,\"TIMEOFF\":0},{\"TYPE\":3,\"TIMESTAR\":0,\"DURATION\":3660,\"TIMEON\":0,\"TIMEOFF\":0},{\"TYPE\":3,\"TIMESTAR\":0,\"DURATION\":3660,\"TIMEON\":0,\"TIMEOFF\":0},{\"TYPE\":3,\"TIMESTAR\":0,\"DURATION\":3660,\"TIMEON\":0,\"TIMEOFF\":0}]}]}";var device = 1;var handleRequest = (request, response) => {    response.writeHead(200, {        'Content-Type': 'text/html'    });	var path = request.url.substring(1, request.url.lenght);	if(fs.existsSync(path)){		fs.readFile(path, null, function (error, data) {			if (error) {				response.writeHead(404);				response.write('Whoops! File not found!');			} else {				response.write(data);			}			response.end();		});	}	else{		if(path=="c"){			if(request.method=="POST"){				var body = ''				request.on('data', function(data) {				  body += data				})				request.on('end', function() {					var mes= "";					var obj = qs.parse(body);					switch(Number(obj.m)){						case 2:{							mes = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><wifi><net><ssid>hoangphong</ssid><rssi>92</rssi></net><net><ssid>Yen Nhi</ssid><rssi>66</rssi></net><net><ssid>3 Vedette</ssid><rssi>66</rssi></net><net><ssid>Phong 22A</ssid><rssi>58</rssi></net><net><ssid>18dtna2</ssid><rssi>52</rssi></net><net><ssid>Khong ten</ssid><rssi>38</rssi></net><net><ssid>PHONG 13B</ssid><rssi>36</rssi></net><net><ssid>DUY ANH</ssid><rssi>30</rssi></net><net><ssid>Nhu Hao</ssid><rssi>30</rssi></net><net><ssid>Hai Co Tien</ssid><rssi>28</rssi></net><net><ssid>Please Real Name!!!</ssid><rssi>26</rssi></net><net><ssid>P21b</ssid><rssi>24</rssi></net><net><ssid>Cary</ssid><rssi>16</rssi></net><net><ssid>Tuyet Van</ssid><rssi>16</rssi></net><net><ssid>Viet Tuong</ssid><rssi>16</rssi></net><net><ssid>PNT</ssid><rssi>16</rssi></net><net><ssid>P40A </ssid><rssi>16</rssi></net><net><ssid>Gia Dinh Nho</ssid><rssi>16</rssi></net></wifi>";						}break;						case 5:{							mes=device==1?ISTARJON:OTHERJSON;						}break;						case 13:{							device = obj.PRODUCT;							mes=device==1?ISTARJON:OTHERJSON;						}break						case 14:{							mes=device==1?ISTARJON:OTHERJSON;						}break;						case 17:{	// rs485 master							console.log(obj);						}break;					}					if(Number(obj.m)==2){						response.writeHead(200, {'Content-Type': 'text/xml'});					}else{						response.writeHead(200, {'Content-Type': 'text/plain'});					}					response.end(mes);				})			}		}else{			response.writeHead(200, {'Content-Type': 'text/plain'});			response.end();		}	}};http.createServer(handleRequest).listen(8000);function removeByteOrderMark(str){    return str.replace(/^\ufeff/g,"")}socket.on('connection', function connection(ws) { 	ws.on('message', function incoming(message) { 		console.log(message);		if(message=='open'){			ws.send(WS_START);		}else{		 	var obj = JSON.parse(message);		 	// if(obj.TEST == "ADC"){		 	// 	ws.send("TEST={\"ADC\":[1,2,3]}"); 		 	// }		}  	});	ws.on('open', function open() {	  ws.send('something');	});});